// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "sean.zheng",
            "url": "https://blog.seancheng.space",
            "email": "blackhorseya@gmail.com"
        },
        "license": {
            "name": "GPL-3.0",
            "url": "https://spdx.org/licenses/GPL-3.0-only.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/blocks": {
            "get": {
                "description": "List block records",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blocks"
                ],
                "summary": "List block records",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "size",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/blocks.listResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/er.Error"
                        }
                    }
                }
            }
        },
        "/v1/blocks/{hash}": {
            "get": {
                "description": "Get a block record by hash",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blocks"
                ],
                "summary": "Get a block record by hash",
                "parameters": [
                    {
                        "type": "string",
                        "description": "hash",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/blocks.blockResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/er.Error"
                        }
                    }
                }
            }
        },
        "/v1/transactions/{hash}": {
            "get": {
                "description": "Get a transaction by hash",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get a transaction by hash",
                "parameters": [
                    {
                        "type": "string",
                        "description": "hash",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/er.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "blocks.blockResponse": {
            "type": "object",
            "properties": {
                "block": {
                    "$ref": "#/definitions/model.BlockRecord"
                }
            }
        },
        "blocks.listResponse": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.BlockRecord"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "er.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "msg": {
                    "type": "string"
                }
            }
        },
        "model.BlockRecord": {
            "type": "object",
            "properties": {
                "block_hash": {
                    "description": "@gotags: json:\"block_hash\"",
                    "type": "string"
                },
                "block_num": {
                    "description": "@gotags: json:\"block_num\"",
                    "type": "integer"
                },
                "depth": {
                    "type": "integer"
                },
                "parent_hash": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/model.BlockStatus"
                },
                "transactions": {
                    "description": "@gotags: json:\"transactions,omitempty\"",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkg_entity_domain_block_model.Transaction"
                    }
                }
            }
        },
        "model.BlockStatus": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "x-enum-varnames": [
                "BlockStatus_BLOCK_STATUS_UNSPECIFIED",
                "BlockStatus_BLOCK_STATUS_STABLE",
                "BlockStatus_BLOCK_STATUS_UNSTABLE",
                "BlockStatus_BLOCK_STATUS_REORG"
            ]
        },
        "pkg_entity_domain_block_model.Event": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "index": {
                    "type": "integer"
                }
            }
        },
        "pkg_entity_domain_block_model.Transaction": {
            "type": "object",
            "properties": {
                "block_hash": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "logs": {
                    "description": "@gotags: json:\"logs,omitempty\"",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkg_entity_domain_block_model.Event"
                    }
                },
                "nonce": {
                    "type": "integer"
                },
                "to": {
                    "type": "string"
                },
                "tx_hash": {
                    "description": "@gotags: json:\"tx_hash\"",
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "response.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "msg": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.0.1",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "ethscan API",
	Description:      "API for ethscan",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
