// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/blackhorseya/ethscan/internal/adapter/consumer"
	"github.com/blackhorseya/ethscan/internal/entity/domain/activity/biz"
	"github.com/blackhorseya/ethscan/internal/entity/domain/activity/biz/repo"
	"github.com/blackhorseya/ethscan/internal/pkg/config"
	"github.com/blackhorseya/ethscan/internal/pkg/log"
	"github.com/blackhorseya/ethscan/internal/pkg/storage/mariadb"
	"github.com/blackhorseya/ethscan/internal/pkg/transports/kafka"
	"github.com/blackhorseya/ethscan/pkg/app"
	"github.com/google/wire"
)

// Injectors from wire.go:

func CreateService(path2 string, id int64) (app.Service, error) {
	viper, err := config.NewConfig(path2)
	if err != nil {
		return nil, err
	}
	options, err := log.NewOptions(viper)
	if err != nil {
		return nil, err
	}
	logger, err := log.NewLogger(options)
	if err != nil {
		return nil, err
	}
	consumerOptions, err := kafka.NewConsumerOptions(viper)
	if err != nil {
		return nil, err
	}
	kafkaConsumer, err := kafka.NewConsumer(consumerOptions)
	if err != nil {
		return nil, err
	}
	nodeOptions, err := repo.NewNodeOptions(viper)
	if err != nil {
		return nil, err
	}
	mariadbOptions, err := mariadb.NewOptions(viper, logger)
	if err != nil {
		return nil, err
	}
	db, err := mariadb.NewMariadb(mariadbOptions, logger)
	if err != nil {
		return nil, err
	}
	iRepo, err := repo.NewImpl(nodeOptions, db)
	if err != nil {
		return nil, err
	}
	iBiz := biz.NewImpl(iRepo)
	adaptersConsumer := consumer.NewConsumer(logger, kafkaConsumer, iBiz)
	service, err := NewService(logger, adaptersConsumer)
	if err != nil {
		return nil, err
	}
	return service, nil
}

// wire.go:

var providerSet = wire.NewSet(config.ProviderSet, log.ProviderSet, mariadb.ProviderSet, kafka.ProviderConsumer, consumer.ActivitySet, biz.ActivitySet, NewService)
