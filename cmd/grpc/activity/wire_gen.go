// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/blackhorseya/ethscan/internal/pkg/config"
	"github.com/blackhorseya/ethscan/internal/pkg/log"
	"github.com/blackhorseya/ethscan/internal/pkg/transports/grpcx"
	"github.com/blackhorseya/ethscan/pkg/app"
	"github.com/google/wire"
)

// Injectors from wire.go:

func CreateService(path2 string, id int64) (app.Service, error) {
	viper, err := config.NewConfig(path2)
	if err != nil {
		return nil, err
	}
	options, err := log.NewOptions(viper)
	if err != nil {
		return nil, err
	}
	logger, err := log.NewLogger(options)
	if err != nil {
		return nil, err
	}
	serverOptions, err := grpcx.NewServerOptions(viper)
	if err != nil {
		return nil, err
	}
	server := grpcx.NewServer(serverOptions, logger)
	adaptersGrpc := NewGrpc(logger)
	appService, err := NewService(logger, server, adaptersGrpc)
	if err != nil {
		return nil, err
	}
	return appService, nil
}

// wire.go:

var providerSet = wire.NewSet(config.ProviderSet, log.ProviderSet, grpcx.ProviderServer, NewService,
	NewGrpc,
)
